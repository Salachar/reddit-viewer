{"version":3,"sources":["components/article/comments.module.css","components/article/article.module.css","components/sidemenu/sidemenu.module.css","components/listing.module.css","components/header.module.css","components/sidemenu/subreddit.module.css","components/articles.module.css","app.module.css","components/sidemenu/searchsubreddits.module.css","reducers/rootReducer.js","reducers/articleReducer.js","reducers/articlesReducer.js","reducers/searchReducer.js","reducers/subredditReducer.js","helpers/utils.js","helpers/article.js","actions/articlesAction.js","components/header.js","actions/articleAction.js","components/listing.js","components/articles.js","actions/subredditAction.js","components/sidemenu/subreddit.js","components/sidemenu/subreddits.js","components/sidemenu/searchsubreddits.js","actions/searchAction.js","components/sidemenu/sidemenu.js","components/article/comments.js","components/article/article.js","App.js","serviceWorker.js","index.js","store.js"],"names":["module","exports","combineReducers","article","state","action","type","payload","articles","search","subreddits","subscribed_map","forEach","subreddit","key","subscribed","UUID","replace","c","r","Math","random","toString","GET","url","parser","Promise","resolve","reject","fetch","then","response","json","e","console","log","error","cleanArticle","data","author","kind","children","id","name","title","created_at","created_utc","submmited","permalink","stickied","full_data","score","full","display","media","thumbnail","comments","amount","num_comments","awards","all_awardings","map","award","toLowerCase","count","floor","toFixed","submitted","time_diff","Date","getTime","is_self","is_video","is_reddit_media_domain","video","secure_media","match","image","fetchArticles","dispatch","listings","item","action_data","Header","searchCollection","listing","props","sub","index","length","onClick","currentTarget","dataset","className","styles","this","data-listing","Component","mapDispatchToProps","connect","fetchArticle","article_data","comment_data","comment","cleanComments","parent","even_layer","body","parsed_comment","even","push","replies","reply","Listing","onCommentClick","style","backgroundImage","submission","subheader","list","subscribeSubreddit","task","getState","obj","JSON","parse","stringify","filter","current_subreddit","Subreddit","onSubscribe","checked","onChange","checkbox","subscribers","Subreddits","side_menu_styles","section","section_title","SearchSubreddits","search_string","value","searchForSubreddits","spellCheck","onKeyDown","placeholder","display_name","description","public_description","name_lower","banner","banner_img","icon","icon_img","subs","sort","a","b","a_match","indexOf","b_match","defaultProps","Sidemenu","sidemenu","Comments","comment_even","comment_odd","renderComments","Article","onExitClick","ref","target","classList","dismissArticle","alt","src","content","link","href","rel","link_address","renderMedia","bind","background","renderBody","App","main_container","renderArticle","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","store","createStore","rootReducer","applyMiddleware","thunk","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5ae31fb8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"comments_comments__1m4aD\",\"comment_even\":\"comments_comment_even__2M1eN\",\"comment_odd\":\"comments_comment_odd__1iw7u\",\"comment\":\"comments_comment__1Uiu4\",\"author\":\"comments_author__2AwgY\",\"score\":\"comments_score__2qYLq\",\"body\":\"comments_body__25IBj\",\"award\":\"comments_award__2U-jd\",\"gold\":\"comments_gold__18ybK\",\"silver\":\"comments_silver__1ZdjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"article_background__1RxoR\",\"article\":\"article_article__2XQ13\",\"body\":\"article_body__1488l\",\"title\":\"article_title__jkEN2\",\"author\":\"article_author__3_ZY0\",\"media\":\"article_media__9CArc\",\"content\":\"article_content__NXr9P\",\"link\":\"article_link__1ovlw\",\"link_address\":\"article_link_address__D7GbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidemenu\":\"sidemenu_sidemenu__2Gzss\",\"title\":\"sidemenu_title__fKhVU\",\"section\":\"sidemenu_section__iCM4A\",\"section_title\":\"sidemenu_section_title__A_O9T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"listing_article__294Gn\",\"score\":\"listing_score__2ipV6\",\"thumbnail\":\"listing_thumbnail__2HTA3\",\"body\":\"listing_body__3ZSuB\",\"title\":\"listing_title__1ZYR7\",\"submission\":\"listing_submission__2VXX3\",\"comments\":\"listing_comments__2TOPQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listing\":\"header_listing__2r3Gj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subreddit\":\"subreddit_subreddit__26Bf5\",\"checkbox\":\"subreddit_checkbox__3n3oI\",\"title\":\"subreddit_title__Vn-nr\",\"subscribers\":\"subreddit_subscribers__1zEzW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"articles\":\"articles_articles__1S7G8\",\"subheader\":\"articles_subheader__vOXX2\",\"list\":\"articles_list__2wgCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"app_main_container__Grb3i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"searchsubreddits_search__3nqLE\"};","import { combineReducers } from 'redux';\r\n\r\nimport articleReducer from './articleReducer';\r\nimport articlesReducer from './articlesReducer';\r\nimport searchReducer from './searchReducer';\r\nimport subredditReducer from './subredditReducer';\r\n\r\nexport default combineReducers({\r\n    article: articleReducer,\r\n    articles: articlesReducer,\r\n    search: searchReducer,\r\n    subreddits: subredditReducer\r\n});","export default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'article':\r\n            return {\r\n                article: action.payload\r\n            };\r\n\r\n        case 'dismiss_article': // null payload\r\n            return {\r\n                article: action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'articles':\r\n            return {\r\n                articles: action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'search_subreddits':\r\n            return {\r\n                subreddits: action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'subscribe_subreddit':\r\n            let subscribed_map = {};\r\n            (action.payload || []).forEach((subreddit) => {\r\n                subscribed_map[subreddit.key] = subreddit;\r\n            })\r\n            return {\r\n                subscribed: action.payload,\r\n                subscribed_map: subscribed_map\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export function copy (obj) {\r\n    return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\nexport function UUID () {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        const r = Math.random() * 16 | 0;\r\n        const v = (c === 'x') ? r : ((r & 0x3) | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\n\r\nexport function GET (url, parser) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            fetch(url).then(response => response.json()).then((response) => {\r\n                try {\r\n                    resolve(parser(response));\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            });\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    });\r\n}","import { UUID } from './utils';\r\n\r\n/*\r\n    Caveats I have noticed from looking at reddit post json:\r\n        title:\r\n            Not everything will have a title, like some askreddit threads.\r\n        url: multipurpose, link to an image or an article or a video\r\n            Type needs to be figured out by looking at a couple of other fields\r\n*/\r\n\r\nexport function cleanArticle (data) {\r\n    try {\r\n        if (!data.author && data.kind) {\r\n            data = data.data.children[0].data;\r\n        }\r\n\r\n        let article = {\r\n            id: data.id,\r\n            key: data.id + '_' + UUID(),\r\n            name: data.name, // This is used for \"pagination\"\r\n            title: (data.title || '').replace(/&amp;/g, '&'),\r\n            author: data.author,\r\n            subreddit: data.subreddit,\r\n            created_at: data.created_utc,\r\n            submmited: null,\r\n            permalink: data.permalink,\r\n            stickied: data.stickied,\r\n            full_data: data,\r\n            type: 'none',\r\n            score: {\r\n                full: data.score,\r\n                display: data.score\r\n            },\r\n            media: {\r\n                thumbnail: data.thumbnail\r\n            },\r\n            comments: {\r\n                amount: data.num_comments\r\n            },\r\n            awards: (data.all_awardings || []).map((award) => {\r\n                return {\r\n                    name: award.name.toLowerCase(),\r\n                    count: award.count,\r\n                    key: `${award.id}-${UUID()}`\r\n                };\r\n            })\r\n        };\r\n\r\n        if (article.score.full > 100000) {\r\n            article.score.display = Math.floor(article.score.full / 1000) + 'K';\r\n        } else if (article.score.full > 10000) {\r\n            article.score.display = (article.score.full / 1000).toFixed(1) + 'K';\r\n        }\r\n\r\n        let submitted = article.created_at * 1000;\r\n        let time_diff = (new Date()).getTime() - (new Date(submitted)).getTime();\r\n        // milli -> sec -> min\r\n        time_diff = time_diff / 1000 / 60;\r\n        if (time_diff > 60) {\r\n            time_diff = Math.floor(time_diff / 60) + ' hours';\r\n        } else {\r\n            time_diff = Math.floor(time_diff) + ' minutes';\r\n        }\r\n        article.submmited = time_diff;\r\n\r\n        if (data.is_self) {\r\n            article.type = 'text';\r\n        } else if (data.url && data.is_video && data.is_reddit_media_domain) {\r\n            article.type = 'video';\r\n            article.media.video = data.secure_media || data.media;\r\n        } else if (data.url && data.url.match(/.jpg|.jpeg|.png|.bmp|.gif/)) {\r\n            article.type = 'image';\r\n            article.media.image = data.url;\r\n        } else if (data.url) {\r\n            article.type = 'link';\r\n        }\r\n\r\n        return article;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function cleanComments (comment, parent, even_layer) {\r\n    // debugger;\r\n    if (!comment.body) return;\r\n\r\n    let parsed_comment = {\r\n        id: comment.id,\r\n        key: `${comment.id}_${UUID()}`,\r\n        author: comment.author,\r\n        body: comment.body,\r\n        score: comment.score,\r\n        awards: (comment.all_awardings || []).map((award) => {\r\n            return {\r\n                name: award.name.toLowerCase(),\r\n                count: award.count,\r\n                key: `${award.id}-${UUID()}`\r\n            };\r\n        }),\r\n        even: even_layer\r\n    };\r\n    parent.push(parsed_comment);\r\n\r\n    if (comment.replies && comment.replies.data.children) {\r\n        parsed_comment.replies = [];\r\n        comment.replies.data.children.forEach((reply) => {\r\n            cleanComments(reply.data, parsed_comment.replies, !even_layer);\r\n        });\r\n    }\r\n}\r\n","import { GET } from '../helpers/utils';\r\nimport { cleanArticle } from '../helpers/article';\r\n\r\n/*\r\n    /r/pics+gifs+todayilearned/new.json\r\n*/\r\n\r\nexport const fetchArticles = (subreddit) => (dispatch) => {\r\n    const URL = `https://www.reddit.com/${subreddit.url}.json?limit=25`;\r\n    GET(URL, (response) => {\r\n        return {\r\n            title: subreddit.title || subreddit.name,\r\n            listings: response.data.children.map((item) => {\r\n                return cleanArticle(item.data);\r\n            })\r\n        };\r\n    }).then((action_data) => {\r\n        dispatch({\r\n            type: 'articles',\r\n            payload: action_data\r\n        });\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchArticles } from '../actions/articlesAction';\r\n\r\nimport styles from './header.module.css';\r\n\r\nclass Header extends Component {\r\n    searchCollection = (e) => {\r\n        let listing = '/r/';\r\n        this.props.subscribed.forEach((sub, index) => {\r\n            listing += sub.name;\r\n            if (index < this.props.subscribed.length - 1) {\r\n                listing += '+';\r\n            }\r\n        });\r\n        this.props.fetchArticles({\r\n            title: 'My Subreddits',\r\n            url: listing\r\n        });\r\n    }\r\n\r\n    onClick = (e) => {\r\n        this.props.fetchArticles({\r\n            title: e.currentTarget.dataset.listing,\r\n            url: e.currentTarget.dataset.listing\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className={styles.listings}>\r\n                <span onClick={this.onClick} data-listing=\"best\" className={styles.listing}>Best</span>\r\n                <span onClick={this.onClick} data-listing=\"top\" className={styles.listing}>Top</span>\r\n                <span onClick={this.onClick} data-listing=\"new\" className={styles.listing}>New</span>\r\n                <span onClick={this.onClick} data-listing=\"hot\" className={styles.listing}>Hot</span>\r\n                <span onClick={this.searchCollection} data-listing=\"hot\" className={styles.listing}>My Subreddits</span>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        subscribed: state.subreddits.subscribed\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    fetchArticles: (listing) => (fetchArticles(listing))\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import { GET } from '../helpers/utils';\r\nimport {\r\n    cleanArticle,\r\n    cleanComments\r\n } from '../helpers/article';\r\n\r\n /*\r\n    Fetching a full article requires the subreddit the article belongs to\r\n    and the\r\n\r\n    Sample URL: https://www.reddit.com/r/NintendoSwitch/comments/de98bj.json\r\n */\r\n\r\nexport const fetchArticle = (article) => (dispatch) => {\r\n    const URL = `https://www.reddit.com/r/${article.subreddit}/comments/${article.id}.json`;\r\n    GET(URL, (response) => {\r\n        let [article_data, comment_data] = response;\r\n\r\n        let article = {\r\n            data: cleanArticle(article_data),\r\n            comments: []\r\n        };\r\n\r\n        comment_data = comment_data.data.children;\r\n        comment_data.forEach((comment) => {\r\n            cleanComments(comment.data, article.comments, true);\r\n        });\r\n\r\n        return article;\r\n    }).then((action_data) => {\r\n        dispatch({\r\n            type: 'article',\r\n            payload: action_data\r\n        });\r\n    });\r\n}\r\n\r\nexport const dismissArticle = (article) => (dispatch) => {\r\n    dispatch({\r\n        type: 'article',\r\n        payload: null\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchArticle } from '../actions/articleAction';\r\n\r\nimport styles from './listing.module.css';\r\n\r\nclass Listing extends Component {\r\n    onCommentClick = () => {\r\n        this.props.fetchArticle(this.props.listing);\r\n    }\r\n\r\n    render() {\r\n        const data = this.props.listing;\r\n        if (!data) return;\r\n        return (\r\n            <div onClick={this.onCommentClick} className={styles.article}>\r\n                <div className={styles.score}>{data.score.display}</div>\r\n                <div className={styles.thumbnail} style={{ backgroundImage: `url(\"${data.media.thumbnail}\")` }}></div>\r\n                <div className={styles.body}>\r\n                    <div className={styles.title}>{data.title}</div>\r\n                    <div className={styles.submission}>{`Submitted ${data.submmited} ago by ${data.author} to ${data.subreddit}`}</div>\r\n                    <div className={styles.comments}>{data.comments.amount} comments</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchArticle: (listing) => {\r\n        dispatch(fetchArticle(listing));\r\n    }\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Listing);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport styles from './articles.module.css';\r\n\r\nimport Listing from './listing';\r\n\r\nconst Articles = ({articles}) => {\r\n    return (\r\n        <div className={styles.articles}>\r\n            <div className={styles.subheader}>\r\n\r\n            </div>\r\n            <div className={styles.list}>\r\n                {((articles || {}).listings || []).map((listing) => {\r\n                    if (!listing || !listing.key) return null;\r\n                    return <Listing key={listing.key} listing={listing} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        articles: state.articles.articles\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Articles);\r\n","import { copy } from '../helpers/utils';\r\n\r\nexport const subscribeSubreddit = (subreddit, task) => (dispatch, getState) => {\r\n    let subreddits = copy((getState().subreddits || {}).subscribed || []);\r\n\r\n    if (task === 'add') {\r\n        subreddits.push(subreddit);\r\n    } else {\r\n        subreddits = subreddits.filter((current_subreddit) => {\r\n            return current_subreddit.key !== subreddit.key;\r\n        });\r\n    }\r\n\r\n    dispatch({\r\n        type: 'subscribe_subreddit',\r\n        payload: subreddits\r\n    });\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchArticles } from '../../actions/articlesAction';\r\nimport { subscribeSubreddit } from '../../actions/subredditAction';\r\n\r\nimport styles from './subreddit.module.css';\r\n\r\nclass Subreddit extends Component {\r\n    onClick = (e) => {\r\n        this.props.fetchArticles(this.props.subreddit);\r\n    }\r\n\r\n    onSubscribe = (e) => {\r\n        const checked = e.currentTarget.checked;\r\n        this.props.subscribeSubreddit(this.props.subreddit, checked ? 'add' : 'remove');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.subreddit}>\r\n                <input type=\"checkbox\" checked={this.props.checked} onChange={this.onSubscribe} className={styles.checkbox}></input>\r\n                <span onClick={this.onClick} className={styles.title}>{this.props.subreddit.name}</span>\r\n                <span className={styles.subscribers}>{this.props.subreddit.subscribers.display}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchArticles: (subreddit) => dispatch(fetchArticles(subreddit)),\r\n    subscribeSubreddit: (subreddit, task) => dispatch(subscribeSubreddit(subreddit, task))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Subreddit);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport side_menu_styles from './sidemenu.module.css';\r\n\r\nimport Subreddit from './subreddit';\r\n\r\nclass Subreddits extends Component {\r\n    render() {\r\n        return (\r\n            <div className={side_menu_styles.section}>\r\n                <div className={side_menu_styles.section_title}>Subscribed:</div>\r\n                {(this.props.subscribed || []).map((subreddit) => {\r\n                    return <Subreddit key={`subbed_${subreddit.key}`} checked={true} subreddit={subreddit} />;\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        subscribed: state.subreddits.subscribed\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Subreddits);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { searchForSubreddits } from '../../actions/searchAction';\r\n\r\nimport side_menu_styles from './sidemenu.module.css';\r\nimport styles from './searchsubreddits.module.css';\r\n\r\nimport Subreddit from './subreddit';\r\n\r\nclass SearchSubreddits extends Component {\r\n    search = (e) => {\r\n        if (e.key.toLowerCase() !== 'enter') return;\r\n        const search_string = e.currentTarget.value;\r\n        this.props.searchForSubreddits(search_string);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={side_menu_styles.section}>\r\n                <div className={side_menu_styles.section_title}>Search:</div>\r\n                <input className={styles.search} spellCheck=\"false\" onKeyDown={this.search} placeholder=\"subreddit name\"/>\r\n                {(this.props.subreddits || []).map((subreddit) => {\r\n                    return <Subreddit key={`search_${subreddit.key}`} checked={!!this.props.subscribed_map[subreddit.key]} subreddit={subreddit} />;\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        subreddits: state.search.subreddits,\r\n        subscribed_map: state.subreddits.subscribed_map\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    searchForSubreddits: (search_string) => searchForSubreddits(search_string)\r\n};\r\n\r\nSearchSubreddits.defaultProps = {\r\n    subreddits: [],\r\n    subscribed_map: {},\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchSubreddits);","import { GET } from '../helpers/utils';\r\n\r\nexport const searchForSubreddits = (search_string) => (dispatch) => {\r\n    const URL = `https://www.reddit.com/subreddits/search.json?q=${search_string}&include_over_18=on`;\r\n    GET(URL, (response) => {\r\n            const subreddits = (response.data.children || []).map((item) => {\r\n                let subreddit = {\r\n                    key: item.data.display_name.toLowerCase() + '_' + (new Date()).getTime(),\r\n                    description: item.data.public_description,\r\n                    name: item.data.display_name,\r\n                    name_lower: item.data.display_name.toLowerCase(),\r\n                    url: item.data.url,\r\n                    banner: item.data.banner_img,\r\n                    icon: item.data.icon_img,\r\n                    subscribers: {\r\n                        display: item.data.subscribers,\r\n                        full: item.data.subscribers\r\n                    }\r\n                };\r\n\r\n                const subs = subreddit.subscribers.full;\r\n                if (subs > 1000000) {\r\n                    subreddit.subscribers.display = (subs / 100000).toFixed(1) + 'M';\r\n                } else if (subs > 100000) {\r\n                    subreddit.subscribers.display = Math.floor(subs / 1000) + 'K';\r\n                } else if (subs > 10000) {\r\n                    subreddit.subscribers.display = (subs / 1000).toFixed(1) + 'K';\r\n                }\r\n                return subreddit;\r\n            });\r\n\r\n            subreddits.sort((a, b) => {\r\n                let a_match = a.name_lower.indexOf(search_string) !== -1;\r\n                let b_match = b.name_lower.indexOf(search_string) !== -1;\r\n\r\n                if (a_match && b_match) {\r\n                    // they both match the search string, the one with more subscribers is first\r\n                    return b.subscribers.full - a.subscribers.full;\r\n                } else if (a_match) {\r\n                    return -1; // negative puts a first\r\n                } else if (b_match) {\r\n                    return 1; // positive puts b first\r\n                } else {\r\n                    return b.subscribers.full - a.subscribers.full;\r\n                }\r\n            });\r\n\r\n            return subreddits;\r\n    }).then((action_data) => {\r\n        dispatch({\r\n            type: 'search_subreddits',\r\n            payload: action_data\r\n        });\r\n    });\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport styles from './sidemenu.module.css';\r\n\r\nimport Subreddits from './subreddits';\r\nimport SearchSubreddits from './searchsubreddits';\r\n\r\nclass Sidemenu extends Component {\r\n    render() {\r\n        return (\r\n            <div className={styles.sidemenu}>\r\n                <div className={styles.title}>Subreddits</div>\r\n                <Subreddits subscribed={this.props.subscribed} />\r\n                <SearchSubreddits />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        subscribed: state.subreddits.subscribed\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Sidemenu);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport styles from './comments.module.css';\r\n\r\nclass Comments extends Component {\r\n    renderComments (comments) {\r\n        if (!comments || !comments.length) return;\r\n        return comments.map((comment) => {\r\n            return (\r\n                <div key={comment.key} className={`${styles.comment} ${comment.even ? styles.comment_even : styles.comment_odd}`}>\r\n                    <div className={styles.author}>\r\n                        <span>{comment.author}</span>\r\n                        <span className={styles.score}>{comment.score} points</span>\r\n                        {(comment.awards || []).map((award) => {\r\n                            if (award.name.match(/gold|silver/)) {\r\n                                return <div key={award.key} className={`${styles.award} ${styles[award.name]}`}>{award.count}</div>\r\n                            }\r\n                            return <div key={award.key} className={styles.award}>{award.name}</div>\r\n                        })}\r\n                    </div>\r\n                    <div className={styles.body}>{comment.body}</div>\r\n                    {((comment.replies || []).length > 0) &&\r\n                        <div className={styles.comments}>{this.renderComments(comment.replies)}</div>\r\n                    }\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                {this.renderComments(this.props.comments)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, null)(Comments);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { dismissArticle } from '../../actions/articleAction';\r\n\r\nimport Comments from './comments';\r\n\r\nimport styles from './article.module.css';\r\n\r\nclass Article extends Component {\r\n    onExitClick = (ref, e) => {\r\n        if (e.target.classList.value.match(/background/)) {\r\n            this.props.dismissArticle();\r\n        }\r\n    }\r\n\r\n    renderMedia (article) {\r\n        switch (article.type) {\r\n            case 'video':\r\n                break;\r\n            case 'image':\r\n                return (\r\n                    <img alt=\"Parse for text\" className={styles.media} src={article.media.image} />\r\n                )\r\n            case 'text':\r\n                break;\r\n            case 'link':\r\n                return (\r\n                    <div className={styles.content}>\r\n                        <a className={styles.link} href={article.url} target=\"_blank\" rel=\"noopener noreferrer\">Go To Article</a>\r\n                        <a className={styles.link_address} href={article.url} target=\"_blank\" rel=\"noopener noreferrer\">{article.url}</a>\r\n                    </div>\r\n                );\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    renderBody (article) {\r\n        return (\r\n            <div className={styles.body}>\r\n                <div className={styles.title}>{article.title}</div>\r\n                <div className={styles.author}>{article.author}</div>\r\n                {this.renderMedia(article)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render () {\r\n        const article = this.props.data;\r\n        if (!article) return;\r\n        return (\r\n            <div onClick={this.onExitClick.bind(this, 'showDetails')} className={styles.background}>\r\n                <div className={styles.article}>\r\n                    {this.renderBody(article.data)}\r\n                    <Comments key={`comments_${article.key}`} comments={article.comments} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    dismissArticle: () => dismissArticle()\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Article);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchArticles } from './actions/articlesAction';\r\n\r\nimport styles from './app.module.css';\r\n\r\nimport Header from './components/header';\r\nimport Articles from './components/articles';\r\nimport Sidemenu from './components/sidemenu/sidemenu';\r\nimport Article from './components/article/article';\r\n\r\nclass App extends Component {\r\n    componentDidMount () {\r\n        this.props.fetchArticles({\r\n            title: 'best',\r\n            url: 'best'\r\n        });\r\n    }\r\n\r\n    renderArticle () {\r\n        if (!this.props.article) return;\r\n        return <Article data={this.props.article} />;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <Header />\r\n                <div className={styles.main_container}>\r\n                    <Articles />\r\n                    <Sidemenu />\r\n                </div>\r\n                {this.renderArticle()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        article: state.article.article\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchArticles: (listing) => dispatch(fetchArticles(listing))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './store';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore()}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\nserviceWorker.register();","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nexport default function configureStore() {\r\n    return createStore(\r\n        rootReducer,\r\n        applyMiddleware(thunk)\r\n    );\r\n}"],"sourceRoot":""}